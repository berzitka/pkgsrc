$NetBSD: patch-ae,v 1.9 2011/11/24 05:36:36 manu Exp $

On NetBSD use libperfuse(3), rename umount2(2) as unmount(2), and skip
inexistant /etc/mtab management.

Include <signal.h> for sigprocmask(2)

Use /sbin/mount on NetBSD, not /bin/mount

--- contrib/fuse-lib/mount.c.orig	2011-08-23 14:31:36.000000000 +0200
+++ contrib/fuse-lib/mount.c	2011-11-24 03:31:11.000000000 +0100
@@ -19,16 +19,30 @@
 #include <limits.h>
 #include <fcntl.h>
 #include <errno.h>
 #include <dirent.h>
+#include <signal.h>
+#ifndef __NetBSD__
 #include <mntent.h>
+#endif /* __NetBSD__ */
 #include <sys/stat.h>
 #include <sys/poll.h>
 #include <sys/socket.h>
 #include <sys/un.h>
 #include <sys/wait.h>
 #include <sys/mount.h>
 
+#ifdef __NetBSD__
+#include <perfuse.h>
+#define umount2(dir, flags) unmount(dir, ((flags) != 0) ? MNT_FORCE : 0)
+#endif
+
+#ifdef linux
+#define _PATH_MOUNT "/bin/mount"
+#else /* NetBSD, MacOS X */
+#define _PATH_MOUNT "/sbin/mount"
+#endif
+
 #ifdef FUSE_UTIL
 #define MALLOC(size) malloc (size)
 #define FREE(ptr) free (ptr)
 #define GFFUSE_LOGERR(...) fprintf (stderr, ## __VA_ARGS__)
@@ -57,8 +71,9 @@
  * - s/free/FREE/, s/malloc/MALLOC/
  * - there are some other minor things
  */
 
+#ifndef __NetBSD__
 static int
 mtab_needs_update (const char *mnt)
 {
         int res;
@@ -90,8 +105,11 @@
         }
 
         return 1;
 }
+#else /* __NetBSD__ */
+#define mtab_needs_update(x) 1
+#endif /* __NetBSD__ */
 
 #ifndef FUSE_UTIL
 static
 #endif
@@ -158,12 +176,12 @@
                                        progname, tmp, strerror (errno));
                         exit (1);
                 }
                 rmdir (tmp);
-                execl ("/bin/mount", "/bin/mount", "-i", "-f", "-t", type,
+                execl (_PATH_MOUNT, _PATH_MOUNT, "-i", "-f", "-t", type,
                        "-o", opts, fsname, mnt, NULL);
-                GFFUSE_LOGERR ("%s: failed to execute /bin/mount: %s",
-                               progname, strerror (errno));
+                GFFUSE_LOGERR ("%s: failed to execute %s: %s",
+                               progname, _PATH_MOUNT, strerror (errno));
                 exit (1);
         }
         res = waitpid (res, &status, 0);
         if (res == -1)
