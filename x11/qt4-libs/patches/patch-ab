$NetBSD: patch-ab,v 1.11 2010/11/15 13:05:45 adam Exp $

--- src/gui/gui.pro.orig	2010-11-06 01:55:14.000000000 +0000
+++ src/gui/gui.pro
@@ -101,7 +101,7 @@ contains(QMAKE_MAC_XARCH, no) {
 } else {
     win32-g++*|!win32:!win32-icc*:!macx-icc* {
         mmx {
-            mmx_compiler.commands = $$QMAKE_CXX -c -Winline
+            mmx_compiler.commands = ${LIBTOOL} --mode=compile $$QMAKE_CXX -c -Winline
 
             mac {
                 mmx_compiler.commands += -Xarch_i386 -mmmx
@@ -112,7 +112,7 @@ contains(QMAKE_MAC_XARCH, no) {
 
             mmx_compiler.commands += $(CXXFLAGS) $(INCPATH) ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
             mmx_compiler.dependency_type = TYPE_C
-            mmx_compiler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_BASE}$${first(QMAKE_EXT_OBJ)}
+            mmx_compiler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_BASE}.lo
             mmx_compiler.input = MMX_SOURCES
             mmx_compiler.variable_out = OBJECTS
             mmx_compiler.name = compiling[mmx] ${QMAKE_FILE_IN}
@@ -120,7 +120,7 @@ contains(QMAKE_MAC_XARCH, no) {
             QMAKE_EXTRA_COMPILERS += mmx_compiler
         }
         3dnow {
-            mmx3dnow_compiler.commands = $$QMAKE_CXX -c -Winline
+            mmx3dnow_compiler.commands = ${LIBTOOL} --mode=compile $$QMAKE_CXX -c -Winline
 
             mac {
                 mmx3dnow_compiler.commands += -Xarch_i386 -m3dnow -Xarch_i386 -mmmx
@@ -131,14 +131,14 @@ contains(QMAKE_MAC_XARCH, no) {
 
             mmx3dnow_compiler.commands += $(CXXFLAGS) $(INCPATH) ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
             mmx3dnow_compiler.dependency_type = TYPE_C
-            mmx3dnow_compiler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_BASE}$${first(QMAKE_EXT_OBJ)}
+            mmx3dnow_compiler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_BASE}.lo
             mmx3dnow_compiler.input = MMX3DNOW_SOURCES
             mmx3dnow_compiler.variable_out = OBJECTS
             mmx3dnow_compiler.name = compiling[mmx3dnow] ${QMAKE_FILE_IN}
             silent:mmx3dnow_compiler.commands = @echo compiling[mmx3dnow] ${QMAKE_FILE_IN} && $$mmx3dnow_compiler.commands
             QMAKE_EXTRA_COMPILERS += mmx3dnow_compiler
             sse {
-                sse3dnow_compiler.commands = $$QMAKE_CXX -c -Winline
+                sse3dnow_compiler.commands = ${LIBTOOL} --mode=compile $$QMAKE_CXX -c -Winline
 
                 mac {
                     sse3dnow_compiler.commands += -Xarch_i386 -m3dnow -Xarch_i386 -msse
@@ -149,7 +149,7 @@ contains(QMAKE_MAC_XARCH, no) {
 
                 sse3dnow_compiler.commands += $(CXXFLAGS) $(INCPATH) ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
                 sse3dnow_compiler.dependency_type = TYPE_C
-                sse3dnow_compiler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_BASE}$${first(QMAKE_EXT_OBJ)}
+                sse3dnow_compiler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_BASE}.lo
                 sse3dnow_compiler.input = SSE3DNOW_SOURCES
                 sse3dnow_compiler.variable_out = OBJECTS
                 sse3dnow_compiler.name = compiling[sse3dnow] ${QMAKE_FILE_IN}
@@ -158,7 +158,7 @@ contains(QMAKE_MAC_XARCH, no) {
             }
         }
         sse {
-            sse_compiler.commands = $$QMAKE_CXX -c -Winline
+            sse_compiler.commands = ${LIBTOOL} --mode=compile $$QMAKE_CXX -c -Winline
 
             mac {
                 sse_compiler.commands += -Xarch_i386 -msse
@@ -169,7 +169,7 @@ contains(QMAKE_MAC_XARCH, no) {
 
             sse_compiler.commands += $(CXXFLAGS) $(INCPATH) ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
             sse_compiler.dependency_type = TYPE_C
-            sse_compiler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_BASE}$${first(QMAKE_EXT_OBJ)}
+            sse_compiler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_BASE}.lo
             sse_compiler.input = SSE_SOURCES
             sse_compiler.variable_out = OBJECTS
             sse_compiler.name = compiling[sse] ${QMAKE_FILE_IN}
@@ -177,7 +177,7 @@ contains(QMAKE_MAC_XARCH, no) {
             QMAKE_EXTRA_COMPILERS += sse_compiler
         }
         sse2 {
-            sse2_compiler.commands = $$QMAKE_CXX -c -Winline
+            sse2_compiler.commands = ${LIBTOOL} --mode=compile $$QMAKE_CXX -c -Winline
 
             mac {
                 sse2_compiler.commands += -Xarch_i386 -msse2
@@ -188,7 +188,7 @@ contains(QMAKE_MAC_XARCH, no) {
 
             sse2_compiler.commands += $(CXXFLAGS) $(INCPATH) ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
             sse2_compiler.dependency_type = TYPE_C
-            sse2_compiler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_BASE}$${first(QMAKE_EXT_OBJ)}
+            sse2_compiler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_BASE}.lo
             sse2_compiler.input = SSE2_SOURCES
             sse2_compiler.variable_out = OBJECTS
             sse2_compiler.name = compiling[sse2] ${QMAKE_FILE_IN}
@@ -215,11 +215,11 @@ contains(QMAKE_MAC_XARCH, no) {
             QMAKE_EXTRA_COMPILERS += ssse3_compiler
         }
         iwmmxt {
-            iwmmxt_compiler.commands = $$QMAKE_CXX -c -Winline
+            iwmmxt_compiler.commands = ${LIBTOOL} --mode=compile $$QMAKE_CXX -c -Winline
             iwmmxt_compiler.commands += -mcpu=iwmmxt
             iwmmxt_compiler.commands += $(CXXFLAGS) $(INCPATH) ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
             iwmmxt_compiler.dependency_type = TYPE_C
-            iwmmxt_compiler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_BASE}$${first(QMAKE_EXT_OBJ)}
+            iwmmxt_compiler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_BASE}.lo
             iwmmxt_compiler.input = IWMMXT_SOURCES
             iwmmxt_compiler.variable_out = OBJECTS
             iwmmxt_compiler.name = compiling[iwmmxt] ${QMAKE_FILE_IN}
