$NetBSD: patch-ad,v 1.4 2010/06/13 22:45:32 wiz Exp $

--- image/png.c.orig	1999-03-29 02:23:46.000000000 +0000
+++ image/png.c
@@ -126,7 +126,7 @@ lf_info_callback(png_struct *state, png_
 
             val = 0;
             for (i = 0; i < info->num_trans; ++i) {
-                if (info->trans[i] < info->trans[val])
+                if (info->trans_alpha[i] < info->trans_alpha[val])
                     val = i;
             }
             png->image->transparent = val;
@@ -154,7 +154,7 @@ lf_info_callback(png_struct *state, png_
         png->image->rgb.used = maxval + 1;
 
         if (info->valid & PNG_INFO_tRNS)
-            png->image->transparent = info->trans_values.gray;
+            png->image->transparent = info->trans_color.gray;
     } else {
         png->image = newTrueImage(info->width, info->height);
        if (!png->image) {
@@ -222,17 +222,11 @@ pngDestroy(void *pointer)
     if (setjmp(png->state->jmpbuf))
         return;
 
-    if (png->state) {
-        png_read_destroy(png->state, png->info, (png_info *) 0);
-        free_mem(png->state);
+    if ((png->state) && (png->info)) {
+        png_destroy_read_struct(&png->state, &png->info, (png_info **)NULL);
         png->state = 0;
     }
 
-    if (png->info) {
-        free_mem(png->info);
-        png->info = 0;
-    }
-
     if (png->image) {
         freeImage(png->image);
         png->image = 0;
@@ -275,28 +269,22 @@ pngInit(void (*lineProc)(void *, int, in
     memset(png, 0, sizeof(pngState));
     png->lineProc = lineProc;
     png->closure = closure;
-    png->state = (png_struct *) alloc_mem(sizeof(png_struct));
+    png->state = (png_struct *) png_create_read_struct(PNG_LIBPNG_VER_STRING,
+        NULL, NULL, NULL);
     if (!png->state)
         return;
 
-    png->info = (png_info *) alloc_mem(sizeof(png_info));
+    png->info = (png_info *) png_create_info_struct(png->state);
     if (!png->info) {
-        free_mem(png->state);
+        png_destroy_read_struct(&png->state, NULL, (png_info **)NULL);
         return;
     }
 
     if (setjmp(png->state->jmpbuf)) {
-        png_read_destroy(png->state, png->info, (png_info *) 0);
-        free_mem(png->state);
-        free_mem(png->info);
-        png->state = 0;
-        png->info = 0;
+        png_destroy_read_struct(&png->state, &png->info, (png_info **)NULL);
         return;
     }
 
-    png_info_init(png->info);
-    png_read_init(png->state);
-
     png_set_progressive_read_fn(png->state, (void *) png, lf_info_callback,
         lf_row_callback, lf_end_callback);
     png->done = image_need_data;
