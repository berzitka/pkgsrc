$NetBSD: patch-af,v 1.1 2010/04/12 21:12:12 drochner Exp $

--- JavaScriptCore/jit/JITOpcodes.cpp.orig	2010-04-12 13:49:15.000000000 +0000
+++ JavaScriptCore/jit/JITOpcodes.cpp
@@ -165,7 +165,7 @@ void JIT::privateCompileCTIMachineTrampo
      * stack pointer by the right amount after the call.
      */
 
-#if COMPILER(MSVC) || OS(LINUX)
+#if COMPILER(MSVC) || OS(LINUX) || OS(NETBSD)
 #if COMPILER(MSVC)
 #pragma pack(push)
 #pragma pack(4)
@@ -228,7 +228,7 @@ void JIT::privateCompileCTIMachineTrampo
     storePtr(regT2, Address(stackPointerRegister, OBJECT_OFFSETOF(NativeCallFrameStructure, thisValue) + OBJECT_OFFSETOF(JSValue, u.asBits.payload)));
     storePtr(regT3, Address(stackPointerRegister, OBJECT_OFFSETOF(NativeCallFrameStructure, thisValue) + OBJECT_OFFSETOF(JSValue, u.asBits.tag)));
 
-#if COMPILER(MSVC) || OS(LINUX)
+#if COMPILER(MSVC) || OS(LINUX) || OS(NETBSD)
     // ArgList is passed by reference so is stackPointerRegister + 4 * sizeof(Register)
     addPtr(Imm32(OBJECT_OFFSETOF(NativeCallFrameStructure, result)), stackPointerRegister, X86Registers::ecx);
 
