$NetBSD: patch-configure,v 1.3 2011/11/30 20:52:46 wiz Exp $

Fix unportable test(1) construct.
Accepted by upstream, will be in next release.

--- configure.orig	2011-11-29 18:15:23.000000000 +0000
+++ configure
@@ -15246,7 +15246,7 @@ else
   enable_werror=no
 fi
 
- if test "$enable_werror" == "yes"; then
+ if test "$enable_werror" = "yes"; then
   ENABLE_WERROR_TRUE=
   ENABLE_WERROR_FALSE='#'
 else
@@ -15255,7 +15255,7 @@ else
 fi
 
 
-if test "$enable_werror" == "yes"; then :
+if test "$enable_werror" = "yes"; then :
   WERROR_CFLAGS="-Werror"
 
 fi
@@ -15267,7 +15267,7 @@ else
   enable_coverage=no
 fi
 
- if test "$enable_coverage" == "yes"; then
+ if test "$enable_coverage" = "yes"; then
   ENABLE_COVERAGE_TRUE=
   ENABLE_COVERAGE_FALSE='#'
 else
@@ -15276,7 +15276,7 @@ else
 fi
 
 
-if test "$enable_coverage" == "yes"; then :
+if test "$enable_coverage" = "yes"; then :
   COVERAGE_CFLAGS="-fprofile-arcs -ftest-coverage"
 	COVERAGE_LIBS="-lgcov"
 
@@ -15380,7 +15380,7 @@ else
   enable_valgrind=no
 fi
 
- if test "$enable_valgrind" == "yes"; then
+ if test "$enable_valgrind" = "yes"; then
   ENABLE_VALGRIND_TRUE=
   ENABLE_VALGRIND_FALSE='#'
 else
@@ -15389,7 +15389,7 @@ else
 fi
 
 
-if test "$enable_valgrind" == "yes"; then :
+if test "$enable_valgrind" = "yes"; then :
   # Extract the first word of "valgrind", so it can be a program name with args.
 set dummy valgrind; ac_word=$2
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
